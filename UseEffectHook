//App.jsx---------------------------------------------------------------------------------------

import { useEffect, useState } from 'react'
import './App.css'
import LoggerComponent from './Components/LoggerComponent'
import TimerComponent from './Components/TimerComponent'
import MultiEffectComponent from './MultiEffectComponent'

function App() {
  // const [count, setCount] = useState(0);
  // const [total, setTotal] = useState(1);

  //-<<<<<<<<<<<<<<<------------------USEEFFECT---------------->>>>>>>>>>>>>>>>>>>>>

  //first -> side-effect function
  //second -> clean up function
  //third -> comma seperated dependecy list

  //variation: 1
  //runs on every render
  // useEffect(()=>{
  //   alert("i will run on every render");
  // })

  //variation: 2
  //runs on only first render
  // useEffect(()=>{
  //    alert("i will run on only first render");
  //    },[])

  //variation: 3
  // useEffect(()=>{
  //      alert("i will run every time when count is updated");
  //       },[count])

  //variation: 4
  //multiple dependencies
  // useEffect(() => {
  //   alert("i will run every time when count/total is updated");
  // }, [count, total])

  //variation: 5
  //es baar lets add a cleanup function
  // 
  
  return (
    <div>
     
     {/* <LoggerComponent/> */}
     {/* <TimerComponent/> */}
     {/* <MultiEffectComponent/> */}

      {/* <button onClick={handleClick}>
        count updated
      </button>
      <br />
      count is : {count}
      <br />

      <button onClick={handleClickTotal}>
        total updated
      </button>
      <br />
      Total is : {total} */}
    </div>
  )
}

export default App

//Components---------------------------------------------------------------
//LoggerComponent.jsx-----------------------------------------------------

import React, { useEffect, useState } from 'react'

export default function LoggerComponent() {
   const [count,setCount]=useState(0);

   //Runs on every render
   useEffect(()=>{
    console.log("component is rendered and count changed :",count)
   })

    function handleClick(){
        setCount(count+1)
    }

  return (
    <div>
      <h1>Count is : {count}</h1>
      <button onClick={handleClick}>
        increament
      </button>
    </div>
  )
}

//TimerComponent.jsx----------------------------------------------------------------

import React, { useEffect, useState } from 'react'

export default function TimerComponent() {

    const [seconds,setSeconds]=useState(0);

    //it will only run on first render

    useEffect(()=>{
      const intervalid= setInterval(() => {
        console.log("setInterval executed")
        setSeconds(prevSeconds => prevSeconds+1)
      }, 1000);

      return()=>{
        console.log("timer is stopped")
        clearInterval(intervalid);
      }
    },[])

  return (
    
    <div>
      <h1>Seconds : {seconds}</h1>
    </div>
  )
}


